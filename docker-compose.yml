version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  front-tier:
  back-tier:
  shop:

services:

  config-service:
    image: ortiz0505/config-service
    container_name: config-service
    ports: 
      - 8081:8081
    networks:
      - shop

  registry-service:
    image: ortiz0505/registry-service
    container_name: registry-service
    ports: 
      - 8099:8099
    depends_on:
      - config-service
    networks:
      - shop

  admin-service:
    image: ortiz0505/admin-service
    container_name: admin-service
    ports: 
      - 8086:8086
    depends_on:
      - config-service
    networks:
      - shop

  gateway-service:
    image: ortiz0505/gateway-service
    container_name: gateway-service
    ports: 
      - 8080:8080
    depends_on:
      - config-service
      - registry-service
    networks:
      - shop

  customer-service:
    image: ortiz0505/customer-service
    container_name: customer-service
    ports: 
      - 8092:8092
    depends_on:
      - config-service
      - registry-service
      - gateway-service
    networks:
      - shop

  product-service:
    image: ortiz0505/product-service
    container_name: product-service
    ports: 
      - 8091:8091
    depends_on:
      - config-service
      - registry-service
      - gateway-service
    networks:
      - shop

  shopping-service:
    image: ortiz0505/shopping-service
    container_name: shopping-service
    ports: 
      - 8093:8093
    depends_on:
      - config-service
      - registry-service
      - gateway-service
    networks:
      - shop

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
    depends_on:
      - cadvisor
    networks:
      - back-tier
    restart: always


  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global


  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8008:8080
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always

